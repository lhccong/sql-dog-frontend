const Math = window.Math, head = document.getElementsByTagName("head")[0], TIMEOUT = 1e4,
  TAC_LOADING_DIV = '<div id="tac-loading" style="\n    border: 1px solid #eee;\n    /* background-color: #409EFF; */\n    border-radius: 5px;\n    width: 318px;\n    height: 318px;\n    line-height: 318px;\n    color: #606266;\n    text-align: center;\n    position: relative;\n    box-sizing: border-box;\n">请稍等...</div>';

function showLoading(e) {
  var t = document.querySelector(e);
  t && (t.innerHTML = TAC_LOADING_DIV)
}

function hideLoading(e) {
  let t = document.querySelector(e);
  t && (t.innerHTML = "")
}

function loadCaptchaScript(e, t, n, r, o) {
  const i = e.scriptUrls, c = e.cssUrls, l = e.timeout || TIMEOUT;
  let s = i.length + c.length;

  function a(e, i) {
    s--, e && 0 === s ? (hideLoading(t.bindEl), r(new TAC(t, n))) : e || (hideLoading(t.bindEl), o(i))
  }

  setTimeout(() => {
    0 !== s && showLoading(t.bindEl)
  }, 100), i.forEach(function (e) {
    loadResource("string" == typeof e ? {url: e} : e, a, "script", l)
  }), c.forEach(function (e) {
    loadResource("string" == typeof e ? {url: e} : e, a, "link", l)
  })
}

function loadResource(e, t, n = "script", r) {
  if (document.querySelector(`${n}[${"script" === n ? "src" : "href"}="${e.url}"]`)) return void t(!0, e);
  let o = !1;
  const i = document.createElement(n);
  "link" === n ? i.rel = "stylesheet" : i.async = !0, i["script" === n ? "src" : "href"] = e.url;
  let c;
  i.onload = i.onreadystatechange = (() => {
    o || i.readyState && "loaded" !== i.readyState && "complete" !== i.readyState || function t(n) {
      e.checkOnReady ? c = setTimeout(() => {
        e.checkOnReady() ? n() : t(n)
      }, 10) : n()
    }(() => {
      o = !0, setTimeout(() => t(o, e), 0)
    })
  }), i.onerror = (() => {
    t(o = !0, e)
  }), head.appendChild(i), setTimeout(() => {
    o || (c && clearTimeout(c), i.onload = i.onerror = null, i.remove && i.remove(), t(o, e))
  }, r || TIMEOUT)
}

function initTAC(e, t, n) {
  return new Promise((r, o) => {
    let i = {..."string" == typeof e ? {url: e} : e};
    i.url && (i.url.endsWith("/") || (i.url += "/"), i.scriptUrls || (i.scriptUrls = [i.url + "js/tac.min.js"]), i.cssUrls || (i.cssUrls = [i.url + "css/tac.css"])), i.scriptUrls && i.cssUrls ? loadCaptchaScript(i, t, n, r, o) : o("请按照文档配置tac")
  })
}

window.loadCaptchaScript = loadCaptchaScript, window.initTAC = initTAC;
